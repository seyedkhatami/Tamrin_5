# mro : method resolution order

"""
در پایتون، شما می‌توانید به‌طور هم‌زمان از چندین کلاس ارث‌بری کنید که به این عمل ارث‌بری چندگانه (Multiple Inheritance) گفته می‌شود.

فرض کنید یک ویژگی دارید که در دو یا چند کلاس تعریف و استفاده شده است. به نظر شما هنگامی که این ویژگی را برای کلاس فرزند صدا بزنید، ترتیب جستجو در کلاس‌ها برای یافتن این ویژگی به چه صورت خواهد بود؟

بگذارید با ذکر مثالی این موضوع را شفاف‌تر کنیم. کلاس‌های زیر را در نظر بگیرید:

"""


class A:
    def __init__(self):
        self.number = 1
        
class B(A):
    def __init__(self):
        self.number = 2

class C(A):
    def __init__(self):
        self.number = 3

class D(A):
    def __init__(self):
        self.number = 4

class E(B, C):
    def __init__(self):
        self.number = 5

class F(C, D):
    def __init__(self):
        self.number = 6

class G(E, F):
    def __init__(self):
        self.number = 7

"""
همانطور که مشاهده میکنید کلاس های 
C ،B و D
از کلاس
A
و کلاس
E
از کلاس های
B و C
و کلاس 
F
از کلاس های
C و D
و کلاس 
G
از کلاس های 
E و F
ارث بری کرده اند
"""

#نکته

"""
در پایتون
mro
از پایین به بالا و از چپ به راست است. به این معنی که پایتون ویژگی خواسته شده را ابتدا در کلاس فعلی جستجو میکند. اگر یافت نشد، در کلاس پدر و همینطور به سمت بالا حرکت میکند تا به کلاس
object
برسد 
"""